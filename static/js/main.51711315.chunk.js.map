{"version":3,"sources":["state/action-types/posts.ts","state/reducers/posts-reducer.ts","state/reducers/index.ts","state/store.ts","api/index.ts","state/action-creators/posts.ts","components/Header.tsx","logo.svg","App.tsx","index.tsx"],"names":["PostsActionTypes","initialState","loading","error","posts","post","reducers","combineReducers","state","action","type","FETCH_POSTS","FETCH_POSTS_SUCCESS","payload","FETCH_POSTS_ERROR","FETCH_POST_SUCCESS","comments","store","createStore","applyMiddleware","thunk","URL","axios","create","baseURL","Api","page","get","data","id","fetchPosts","dispatch","a","getPosts","message","fetchPost","Promise","all","getSinglePost","getPostComments","Header","className","to","Posts","lazy","Post","App","src","logo","alt","href","target","rel","fallback","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.51711315.chunk.js","sourcesContent":["export enum PostsActionTypes {\n  FETCH_POSTS = 'fetch_posts',\n  FETCH_POSTS_SUCCESS = 'fetch_posts_success',\n  FETCH_POSTS_ERROR = 'fetch_posts_error',\n\n  // FETCH_POST = 'fetch_post',\n  FETCH_POST_SUCCESS = 'fetch_post_success',\n  // FETCH_POST_ERROR = 'fetch_post_error',\n}\n","import { PostsActionTypes } from '../action-types';\nimport { Action } from '../actions';\n\nexport interface Comment {\n  postId: number;\n  id: number;\n  name: string;\n  email: string;\n  body: string;\n}\n\nexport interface Post {\n  userId: number;\n  id: number;\n  title: string;\n  body: string;\n  comments?: Comment[];\n}\n\ninterface PostsState {\n  loading: boolean;\n  error: string | null;\n  posts: Post[];\n  post: Post | null;\n}\n\nconst initialState = { loading: false, error: null, posts: [], post: null };\n\nconst postsReducer = (\n  state: PostsState = initialState,\n  action: Action\n): PostsState => {\n  switch (action.type) {\n    case PostsActionTypes.FETCH_POSTS:\n      return { ...state, loading: true, error: null, posts: [] };\n    case PostsActionTypes.FETCH_POSTS_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        error: null,\n        posts: [...state.posts, ...action.payload],\n      };\n    case PostsActionTypes.FETCH_POSTS_ERROR:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload,\n        posts: [],\n        post: null,\n      };\n    // single post\n    case PostsActionTypes.FETCH_POST_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        error: null,\n        post: {\n          ...action.payload.post,\n          comments: action.payload.comments,\n        },\n      };\n    default:\n      return state;\n  }\n};\n\nexport { postsReducer };\n","import { combineReducers } from 'redux';\nimport { postsReducer } from './posts-reducer';\n\nexport const reducers = combineReducers({\n  posts: postsReducer,\n});\n\nexport type RootState = ReturnType<typeof reducers>;\n","import {applyMiddleware, createStore} from 'redux';\nimport thunk from 'redux-thunk';\nimport {reducers} from './reducers';\n\nexport const store = createStore(reducers, {}, applyMiddleware(thunk));\n","import axios from 'axios';\n\nconst URL = axios.create({\n  baseURL: 'https://jsonplaceholder.typicode.com',\n});\n\nexport class Api {\n  static async getPosts({ page = 1 }: { page: number }) {\n    const { data } = await URL.get(`/posts?_page=${page}`);\n\n    return data;\n  }\n\n  static async getSinglePost({ id }: { id: number }) {\n    const { data } = await URL.get(`/posts/${id}`);\n\n    return data;\n  }\n\n  static async getPostComments({ id }: { id: number }) {\n    const { data } = await URL.get(`/posts/${id}/comments`);\n\n    return data;\n  }\n}\n","import { Dispatch } from 'redux';\nimport { PostsActionTypes } from '../action-types';\nimport { Action } from '../actions';\nimport { Api } from '../../api';\n\nconst fetchPosts = ({ page }: { page: number }) => {\n  return async (dispatch: Dispatch<Action>) => {\n    if (page === 1) {\n      dispatch({ type: PostsActionTypes.FETCH_POSTS });\n    }\n\n    try {\n      const payload = await Api.getPosts({ page });\n\n      dispatch({ type: PostsActionTypes.FETCH_POSTS_SUCCESS, payload });\n    } catch (err) {\n      dispatch({\n        type: PostsActionTypes.FETCH_POSTS_ERROR,\n        payload: err.message,\n      });\n    }\n  };\n};\n\nconst fetchPost = ({ id }: { id: number }) => {\n  return async (dispatch: Dispatch<Action>) => {\n    dispatch({ type: PostsActionTypes.FETCH_POSTS });\n\n    try {\n      const [post, comments] = await Promise.all([\n        Api.getSinglePost({ id }),\n        Api.getPostComments({ id }),\n      ]);\n\n      dispatch({\n        type: PostsActionTypes.FETCH_POST_SUCCESS,\n        payload: { post, comments },\n      });\n    } catch (err) {\n      dispatch({\n        type: PostsActionTypes.FETCH_POSTS_ERROR,\n        payload: err.message,\n      });\n    }\n  };\n};\n\nexport { fetchPosts, fetchPost };\n","import { Link } from 'react-router-dom';\nimport './header.css';\n\nconst Header: React.FC = () => {\n  return (\n    <header className=\"header\">\n      <nav className=\"nav\">\n        <Link to=\"/\">\n          <h2>Posts</h2>\n        </Link>\n        <div className=\"nav-links\">\n          <Link to=\"/\">Home</Link>\n        </div>\n      </nav>\n    </header>\n  );\n};\n\nexport default Header;\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { Suspense, lazy } from 'react';\nimport { Provider } from 'react-redux';\nimport { HashRouter, Switch, Route } from 'react-router-dom';\nimport { store } from './state';\nimport Header from './components/Header';\nimport logo from './logo.svg';\nimport './app.css';\n\nconst Posts = lazy(() => import('./pages/Posts'));\nconst Post = lazy(() => import('./pages/Post'));\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <HashRouter>\n        <Header />\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\n            <p>\n              Edit <code>src/App.js</code> and save to reload.\n            </p>\n            <a\n              className=\"App-link\"\n              href=\"https://reactjs.org\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Learn React\n            </a>\n          </header>\n        </div>\n        <main>\n          <Suspense fallback={<div>Loading...</div>}>\n            <Switch>\n              <Route path=\"/posts/:postId\" component={Post} />\n              <Route path=\"/\" component={Posts} />\n            </Switch>\n          </Suspense>\n        </main>\n      </HashRouter>\n    </Provider>\n  );\n};\n\nexport default App;\n","import { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}